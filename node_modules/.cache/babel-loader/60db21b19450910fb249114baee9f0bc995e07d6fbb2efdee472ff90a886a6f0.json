{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ranga\\\\Documents\\\\Journal\\\\jornal\\\\src\\\\ActivityHeatmap.js\",\n  _s = $RefreshSig$();\n// src/components/ActivityHeatmap.js\n\nimport React, { useMemo } from 'react';\nimport './ActivityHeatmap.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ActivityHeatmap = ({\n  data,\n  theme = 'pink'\n}) => {\n  _s();\n  const colorThemes = {\n    green: ['#ebedf0', '#c6e48b', '#7bc96f', '#239a3b', '#196127'],\n    pink: ['#fde2f3', '#f9a8d4', 'rgba(244, 114, 182, 0.8)', '#ec4899', '#db2777']\n  };\n  const colors = colorThemes[theme] || colorThemes.green;\n  const getColor = count => {\n    if (count <= 0) return colors[0];\n    if (count < 2) return colors[1];\n    if (count < 5) return colors[2];\n    if (count < 10) return colors[3];\n    return colors[4];\n  };\n  const {\n    cells,\n    monthLabels\n  } = useMemo(() => {\n    const today = new Date();\n    const cells = [];\n    const monthData = [];\n    const daysToShow = 365; // Show a full year\n\n    const startDate = new Date(today);\n    startDate.setDate(today.getDate() - daysToShow);\n    let currentWeek = 0;\n\n    // Add placeholder days to align the start of the year to the correct weekday\n    const firstDayOfWeek = startDate.getDay();\n    for (let i = 0; i < firstDayOfWeek; i++) {\n      cells.push({\n        date: null,\n        count: -1\n      });\n    }\n    let lastMonth = -1;\n    for (let i = 0; i < daysToShow; i++) {\n      const currentDate = new Date(startDate);\n      currentDate.setDate(startDate.getDate() + i);\n      const dateStr = currentDate.toISOString().split('T')[0];\n      const dayOfWeek = currentDate.getDay();\n      if (dayOfWeek === 0 && i > 0) {\n        currentWeek++;\n      }\n      const currentMonth = currentDate.getMonth();\n      if (currentMonth !== lastMonth) {\n        monthData.push({\n          month: currentDate.toLocaleString('default', {\n            month: 'short'\n          }),\n          colIndex: currentWeek\n        });\n        lastMonth = currentMonth;\n      }\n      cells.push({\n        date: dateStr,\n        count: data[dateStr] || 0\n      });\n    }\n    return {\n      cells,\n      monthLabels: monthData\n    };\n  }, [data]);\n  const weekdays = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `heatmap-container theme-${theme}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"heatmap-months\",\n      children: monthLabels.map(({\n        month,\n        colIndex\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"heatmap-month\",\n        style: {\n          gridColumnStart: colIndex + 1\n        },\n        children: month\n      }, month, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"heatmap-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"heatmap-weekdays\",\n        children: weekdays.map(day => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: day\n        }, day, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 32\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"heatmap-grid\",\n        children: cells.map((cell, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"heatmap-cell\",\n          style: {\n            backgroundColor: getColor(cell.count)\n          },\n          \"data-date\": cell.date,\n          children: cell.date && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"heatmap-tooltip\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [cell.count || 'No', \" entries\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 19\n            }, this), \" on \", cell.date]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(ActivityHeatmap, \"dKAlQizg31X/KBnWhs6D25xyfEM=\");\n_c = ActivityHeatmap;\nexport default ActivityHeatmap;\nvar _c;\n$RefreshReg$(_c, \"ActivityHeatmap\");","map":{"version":3,"names":["React","useMemo","jsxDEV","_jsxDEV","ActivityHeatmap","data","theme","_s","colorThemes","green","pink","colors","getColor","count","cells","monthLabels","today","Date","monthData","daysToShow","startDate","setDate","getDate","currentWeek","firstDayOfWeek","getDay","i","push","date","lastMonth","currentDate","dateStr","toISOString","split","dayOfWeek","currentMonth","getMonth","month","toLocaleString","colIndex","weekdays","className","children","map","style","gridColumnStart","fileName","_jsxFileName","lineNumber","columnNumber","day","cell","index","backgroundColor","_c","$RefreshReg$"],"sources":["C:/Users/Ranga/Documents/Journal/jornal/src/ActivityHeatmap.js"],"sourcesContent":["// src/components/ActivityHeatmap.js\r\n\r\nimport React, { useMemo } from 'react';\r\nimport './ActivityHeatmap.css';\r\n\r\nconst ActivityHeatmap = ({ data, theme = 'pink' }) => {\r\n  const colorThemes = {\r\n    green: ['#ebedf0', '#c6e48b', '#7bc96f', '#239a3b', '#196127'],\r\n    pink: ['#fde2f3', '#f9a8d4', 'rgba(244, 114, 182, 0.8)', '#ec4899', '#db2777'],\r\n  };\r\n\r\n  const colors = colorThemes[theme] || colorThemes.green;\r\n\r\n  const getColor = (count) => {\r\n    if (count <= 0) return colors[0];\r\n    if (count < 2) return colors[1];\r\n    if (count < 5) return colors[2];\r\n    if (count < 10) return colors[3];\r\n    return colors[4];\r\n  };\r\n\r\n  const { cells, monthLabels } = useMemo(() => {\r\n    const today = new Date();\r\n    const cells = [];\r\n    const monthData = [];\r\n    const daysToShow = 365; // Show a full year\r\n\r\n    const startDate = new Date(today);\r\n    startDate.setDate(today.getDate() - daysToShow);\r\n    \r\n    let currentWeek = 0;\r\n    \r\n    // Add placeholder days to align the start of the year to the correct weekday\r\n    const firstDayOfWeek = startDate.getDay();\r\n    for (let i = 0; i < firstDayOfWeek; i++) {\r\n      cells.push({ date: null, count: -1 });\r\n    }\r\n\r\n    let lastMonth = -1;\r\n\r\n    for (let i = 0; i < daysToShow; i++) {\r\n      const currentDate = new Date(startDate);\r\n      currentDate.setDate(startDate.getDate() + i);\r\n      const dateStr = currentDate.toISOString().split('T')[0];\r\n      \r\n      const dayOfWeek = currentDate.getDay();\r\n      if (dayOfWeek === 0 && i > 0) {\r\n        currentWeek++;\r\n      }\r\n      \r\n      const currentMonth = currentDate.getMonth();\r\n      if (currentMonth !== lastMonth) {\r\n        monthData.push({\r\n          month: currentDate.toLocaleString('default', { month: 'short' }),\r\n          colIndex: currentWeek,\r\n        });\r\n        lastMonth = currentMonth;\r\n      }\r\n      \r\n      cells.push({\r\n        date: dateStr,\r\n        count: data[dateStr] || 0,\r\n      });\r\n    }\r\n\r\n    return { cells, monthLabels: monthData };\r\n  }, [data]);\r\n\r\n  const weekdays = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\r\n\r\n  return (\r\n    <div className={`heatmap-container theme-${theme}`}>\r\n      <div className=\"heatmap-months\">\r\n        {monthLabels.map(({ month, colIndex }) => (\r\n          <div key={month} className=\"heatmap-month\" style={{ gridColumnStart: colIndex + 1 }}>\r\n            {month}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"heatmap-body\">\r\n        <div className=\"heatmap-weekdays\">\r\n          {weekdays.map(day => <div key={day}>{day}</div>)}\r\n        </div>\r\n        <div className=\"heatmap-grid\">\r\n          {cells.map((cell, index) => (\r\n            <div\r\n              key={index}\r\n              className=\"heatmap-cell\"\r\n              style={{ backgroundColor: getColor(cell.count) }}\r\n              data-date={cell.date}\r\n            >\r\n              {cell.date && (\r\n                <div className=\"heatmap-tooltip\">\r\n                  <strong>{cell.count || 'No'} entries</strong> on {cell.date}\r\n                </div>\r\n              )}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ActivityHeatmap;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}