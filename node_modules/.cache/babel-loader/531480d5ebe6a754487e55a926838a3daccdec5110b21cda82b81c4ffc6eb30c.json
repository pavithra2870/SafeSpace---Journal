{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ranga\\\\Documents\\\\Journal\\\\jornal\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, Legend, BarChart, Bar } from 'recharts';\nimport '../Dashboard.css';\nimport ActivityHeatmap from '../ActivityHeatmap';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = ({\n  user\n}) => {\n  _s();\n  const {\n    username\n  } = useParams();\n  const [dashboardData, setDashboardData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [recentEntries, setRecentEntries] = useState([]);\n  const [moodTrends7, setMoodTrends7] = useState([]);\n  const [moodTrends180, setMoodTrends180] = useState([]);\n  const [activityData, setActivityData] = useState([]);\n  const [calendarStreaks, setCalendarStreaks] = useState([]);\n  const [selectedMonth, setSelectedMonth] = useState(new Date().getMonth());\n  const [selectedYear, setSelectedYear] = useState(new Date().getFullYear());\n  const API_BASE_URL = 'http://localhost:5001/api';\n\n  // Fetch dashboard data\n  const fetchDashboardData = async () => {\n    try {\n      setLoading(true);\n      const token = localStorage.getItem('token');\n\n      // Fetch dashboard stats\n      const statsResponse = await fetch(`${API_BASE_URL}/user/dashboard`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n\n      // Fetch recent entries\n      const entriesResponse = await fetch(`${API_BASE_URL}/journal?limit=5&sortBy=date&sortOrder=desc`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (statsResponse.ok && entriesResponse.ok) {\n        const statsData = await statsResponse.json();\n        const entriesData = await entriesResponse.json();\n        setDashboardData(statsData.data);\n        setRecentEntries(entriesData.data.entries);\n      } else {\n        setError('Failed to fetch dashboard data');\n      }\n    } catch (error) {\n      setError('Network error');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Fetch mood trends and activity heatmap data\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    // Fetch 7-day mood trends\n    fetch(`${API_BASE_URL}/insights/mood?period=7`, {\n      headers: {\n        'Authorization': `Bearer ${token}`\n      }\n    }).then(res => res.json()).then(data => {\n      var _data$data;\n      return setMoodTrends7(((_data$data = data.data) === null || _data$data === void 0 ? void 0 : _data$data.intensityTrends) || []);\n    });\n    // Fetch 6-month mood trends\n    fetch(`${API_BASE_URL}/insights/mood?period=180`, {\n      headers: {\n        'Authorization': `Bearer ${token}`\n      }\n    }).then(res => res.json()).then(data => {\n      var _data$data2;\n      return setMoodTrends180(((_data$data2 = data.data) === null || _data$data2 === void 0 ? void 0 : _data$data2.intensityTrends) || []);\n    });\n    // Fetch activity heatmap (past year)\n    fetch(`${API_BASE_URL}/insights/patterns?period=365`, {\n      headers: {\n        'Authorization': `Bearer ${token}`\n      }\n    }).then(res => res.json()).then(data => {\n      var _data$data3;\n      return setActivityData(((_data$data3 = data.data) === null || _data$data3 === void 0 ? void 0 : _data$data3.entries) || []);\n    });\n    // Fetch calendar streaks (reuse activity data for now)\n    // You can enhance this to highlight streaks specifically\n    fetch(`${API_BASE_URL}/insights/patterns?period=365`, {\n      headers: {\n        'Authorization': `Bearer ${token}`\n      }\n    }).then(res => res.json()).then(data => {\n      var _data$data4;\n      return setCalendarStreaks(((_data$data4 = data.data) === null || _data$data4 === void 0 ? void 0 : _data$data4.entries) || []);\n    });\n  }, []);\n  useEffect(() => {\n    fetchDashboardData();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen bg-gradient-to-br from-pink-50 to-green-50 flex items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen bg-gradient-to-br from-pink-50 to-green-50 p-6\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"max-w-6xl mx-auto\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-xl font-semibold mb-2\",\n            children: \"\\u274C Error Loading Dashboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: fetchDashboardData,\n            className: \"btn-primary mt-4\",\n            children: \"\\uD83D\\uDD04 Try Again\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this);\n  }\n  const getLevelInfo = level => {\n    const levels = {\n      1: {\n        name: 'Novice Journaler',\n        color: '#6b7280',\n        icon: '🌱'\n      },\n      2: {\n        name: 'Mindful Writer',\n        color: '#10b981',\n        icon: '📝'\n      },\n      3: {\n        name: 'Emotional Explorer',\n        color: '#3b82f6',\n        icon: '🔍'\n      },\n      4: {\n        name: 'Wellness Warrior',\n        color: '#8b5cf6',\n        icon: '⚔️'\n      },\n      5: {\n        name: 'Sage of Self',\n        color: '#f59e0b',\n        icon: '🧘'\n      },\n      6: {\n        name: 'Master of Mindfulness',\n        color: '#ec4899',\n        icon: '🌟'\n      }\n    };\n    return levels[level] || levels[1];\n  };\n  const getMoodEmoji = mood => {\n    const emojis = {\n      happy: '😊',\n      sad: '😢',\n      excited: '🤩',\n      calm: '😌',\n      anxious: '😰',\n      joyful: '😄',\n      tired: '😴',\n      neutral: '😐'\n    };\n    return emojis[mood] || '😐';\n  };\n  const levelInfo = getLevelInfo((dashboardData === null || dashboardData === void 0 ? void 0 : dashboardData.level) || 1);\n\n  // Example mood and happiness data (replace with backend data)\n  const moodData = (dashboardData === null || dashboardData === void 0 ? void 0 : dashboardData.moodTrends) || [{\n    date: 'Mon',\n    mood: 3\n  }, {\n    date: 'Tue',\n    mood: 4\n  }, {\n    date: 'Wed',\n    mood: 2\n  }, {\n    date: 'Thu',\n    mood: 5\n  }, {\n    date: 'Fri',\n    mood: 4\n  }, {\n    date: 'Sat',\n    mood: 3\n  }, {\n    date: 'Sun',\n    mood: 5\n  }];\n  const happinessData = (dashboardData === null || dashboardData === void 0 ? void 0 : dashboardData.happinessTrends) || [{\n    date: 'Mon',\n    happiness: 60\n  }, {\n    date: 'Tue',\n    happiness: 70\n  }, {\n    date: 'Wed',\n    happiness: 50\n  }, {\n    date: 'Thu',\n    happiness: 80\n  }, {\n    date: 'Fri',\n    happiness: 75\n  }, {\n    date: 'Sat',\n    happiness: 65\n  }, {\n    date: 'Sun',\n    happiness: 90\n  }];\n\n  // Filter activityData for selected month/year\n  const filteredActivityData = activityData.filter(entry => {\n    const date = new Date(entry.createdAt);\n    return date.getMonth() === selectedMonth && date.getFullYear() === selectedYear;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-title-banner\",\n      children: \"Your emotions this week\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-screenshot-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        style: {\n          gridColumn: '1/2',\n          gridRow: '1/2'\n        },\n        children: /*#__PURE__*/_jsxDEV(BarChart, {\n          width: 320,\n          height: 220,\n          data: (dashboardData === null || dashboardData === void 0 ? void 0 : dashboardData.emotionBarData) || [],\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"emotion\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Bar, {\n            dataKey: \"count\",\n            fill: \"#a259c6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        style: {\n          gridColumn: '2/3',\n          gridRow: '1/2'\n        },\n        children: /*#__PURE__*/_jsxDEV(LineChart, {\n          width: 320,\n          height: 220,\n          data: moodTrends7.map(d => ({\n            date: new Date(d.date).toLocaleDateString(),\n            mood: d.intensity\n          })),\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n            domain: [1, 5]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: \"mood\",\n            stroke: \"#ec4899\",\n            strokeWidth: 2,\n            dot: {\n              r: 3\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-userinfo-card\",\n        style: {\n          gridColumn: '3/4',\n          gridRow: '1/2'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"font-bold mb-1\",\n          children: \"User info\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '100%',\n            height: 60,\n            background: '#fbcfe8',\n            borderRadius: 8,\n            margin: '0.5rem 0'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dashboard-input-card\",\n          children: \"How are you feeling today?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        style: {\n          gridColumn: '1/2',\n          gridRow: '2/3'\n        },\n        children: /*#__PURE__*/_jsxDEV(LineChart, {\n          width: 320,\n          height: 180,\n          data: moodTrends180.map(d => ({\n            date: new Date(d.date).toLocaleDateString(),\n            mood: d.intensity,\n            energy: d.energy,\n            productivity: d.productivity\n          })),\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: \"mood\",\n            stroke: \"#a259c6\",\n            strokeWidth: 2,\n            dot: {\n              r: 2\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: \"energy\",\n            stroke: \"#f59e42\",\n            strokeWidth: 2,\n            dot: {\n              r: 2\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: \"productivity\",\n            stroke: \"#ec4899\",\n            strokeWidth: 2,\n            dot: {\n              r: 2\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-stats-card\",\n        style: {\n          gridColumn: '2/3',\n          gridRow: '2/3'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Total active days: \", (dashboardData === null || dashboardData === void 0 ? void 0 : dashboardData.activeDays) || 0]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Total happy days: \", (dashboardData === null || dashboardData === void 0 ? void 0 : dashboardData.happyDays) || 0]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Total sad days: \", (dashboardData === null || dashboardData === void 0 ? void 0 : dashboardData.sadDays) || 0]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Your most common emotion: \", (dashboardData === null || dashboardData === void 0 ? void 0 : dashboardData.commonEmotion) || '-']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Current streak: \", (dashboardData === null || dashboardData === void 0 ? void 0 : dashboardData.currentStreak) || 0]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Max streak: \", (dashboardData === null || dashboardData === void 0 ? void 0 : dashboardData.maxStreak) || 0]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-links-card\",\n        style: {\n          gridColumn: '3/4',\n          gridRow: '2/3'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Links and quotes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-heatmap-row\",\n        style: {\n          gridColumn: '1/4',\n          gridRow: '3/4'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dashboard-heatmap-month-labels\",\n          children: ['Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec', 'Jan', 'Feb', 'Mar'].map(m => /*#__PURE__*/_jsxDEV(\"span\", {\n            children: m\n          }, m, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 108\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ActivityHeatmap, {\n          data: activityData,\n          small: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dashboard-heatmap-legend\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Less\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"dashboard-heatmap-legend-box\",\n            style: {\n              background: '#ebedf0'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"dashboard-heatmap-legend-box\",\n            style: {\n              background: '#b2f2c9'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"dashboard-heatmap-legend-box\",\n            style: {\n              background: '#51cf66'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"dashboard-heatmap-legend-box\",\n            style: {\n              background: '#2b9348'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"More\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: '0.95em',\n            color: '#3b3b3b',\n            marginTop: 4\n          },\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#\",\n            style: {\n              color: '#a259c6',\n              textDecoration: 'underline'\n            },\n            children: \"Learn how we count contributions.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 175,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"GgsIS6UZWv6XzLEEsrJeUmaXJaA=\", false, function () {\n  return [useParams];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","useParams","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","ResponsiveContainer","Legend","BarChart","Bar","ActivityHeatmap","Calendar","jsxDEV","_jsxDEV","Dashboard","user","_s","username","dashboardData","setDashboardData","loading","setLoading","error","setError","recentEntries","setRecentEntries","moodTrends7","setMoodTrends7","moodTrends180","setMoodTrends180","activityData","setActivityData","calendarStreaks","setCalendarStreaks","selectedMonth","setSelectedMonth","Date","getMonth","selectedYear","setSelectedYear","getFullYear","API_BASE_URL","fetchDashboardData","token","localStorage","getItem","statsResponse","fetch","headers","entriesResponse","ok","statsData","json","entriesData","data","entries","then","res","_data$data","intensityTrends","_data$data2","_data$data3","_data$data4","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","getLevelInfo","level","levels","name","color","icon","getMoodEmoji","mood","emojis","happy","sad","excited","calm","anxious","joyful","tired","neutral","levelInfo","moodData","moodTrends","date","happinessData","happinessTrends","happiness","filteredActivityData","filter","entry","createdAt","style","gridColumn","gridRow","width","height","emotionBarData","strokeDasharray","dataKey","fill","map","d","toLocaleDateString","intensity","domain","type","stroke","strokeWidth","dot","r","background","borderRadius","margin","energy","productivity","activeDays","happyDays","sadDays","commonEmotion","currentStreak","maxStreak","m","small","fontSize","marginTop","href","textDecoration","_c","$RefreshReg$"],"sources":["C:/Users/Ranga/Documents/Journal/jornal/src/components/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, Legend, BarChart, Bar } from 'recharts';\r\nimport '../Dashboard.css';\r\nimport ActivityHeatmap from '../ActivityHeatmap';\r\nimport Calendar from 'react-calendar';\r\nimport 'react-calendar/dist/Calendar.css';\r\n\r\nconst Dashboard = ({ user }) => {\r\n  const { username } = useParams();\r\n  const [dashboardData, setDashboardData] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n  const [recentEntries, setRecentEntries] = useState([]);\r\n  const [moodTrends7, setMoodTrends7] = useState([]);\r\n  const [moodTrends180, setMoodTrends180] = useState([]);\r\n  const [activityData, setActivityData] = useState([]);\r\n  const [calendarStreaks, setCalendarStreaks] = useState([]);\r\n  const [selectedMonth, setSelectedMonth] = useState(new Date().getMonth());\r\n  const [selectedYear, setSelectedYear] = useState(new Date().getFullYear());\r\n\r\n  const API_BASE_URL = 'http://localhost:5001/api';\r\n\r\n  // Fetch dashboard data\r\n  const fetchDashboardData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const token = localStorage.getItem('token');\r\n      \r\n      // Fetch dashboard stats\r\n      const statsResponse = await fetch(`${API_BASE_URL}/user/dashboard`, {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n\r\n      // Fetch recent entries\r\n      const entriesResponse = await fetch(`${API_BASE_URL}/journal?limit=5&sortBy=date&sortOrder=desc`, {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n\r\n      if (statsResponse.ok && entriesResponse.ok) {\r\n        const statsData = await statsResponse.json();\r\n        const entriesData = await entriesResponse.json();\r\n        \r\n        setDashboardData(statsData.data);\r\n        setRecentEntries(entriesData.data.entries);\r\n      } else {\r\n        setError('Failed to fetch dashboard data');\r\n      }\r\n    } catch (error) {\r\n      setError('Network error');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Fetch mood trends and activity heatmap data\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    // Fetch 7-day mood trends\r\n    fetch(`${API_BASE_URL}/insights/mood?period=7`, {\r\n      headers: { 'Authorization': `Bearer ${token}` }\r\n    })\r\n      .then(res => res.json())\r\n      .then(data => setMoodTrends7(data.data?.intensityTrends || []));\r\n    // Fetch 6-month mood trends\r\n    fetch(`${API_BASE_URL}/insights/mood?period=180`, {\r\n      headers: { 'Authorization': `Bearer ${token}` }\r\n    })\r\n      .then(res => res.json())\r\n      .then(data => setMoodTrends180(data.data?.intensityTrends || []));\r\n    // Fetch activity heatmap (past year)\r\n    fetch(`${API_BASE_URL}/insights/patterns?period=365`, {\r\n      headers: { 'Authorization': `Bearer ${token}` }\r\n    })\r\n      .then(res => res.json())\r\n      .then(data => setActivityData(data.data?.entries || []));\r\n    // Fetch calendar streaks (reuse activity data for now)\r\n    // You can enhance this to highlight streaks specifically\r\n    fetch(`${API_BASE_URL}/insights/patterns?period=365`, {\r\n      headers: { 'Authorization': `Bearer ${token}` }\r\n    })\r\n      .then(res => res.json())\r\n      .then(data => setCalendarStreaks(data.data?.entries || []));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchDashboardData();\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gradient-to-br from-pink-50 to-green-50 flex items-center justify-center\">\r\n        <div className=\"spinner\"></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gradient-to-br from-pink-50 to-green-50 p-6\">\r\n        <div className=\"max-w-6xl mx-auto\">\r\n          <div className=\"error-message\">\r\n            <h2 className=\"text-xl font-semibold mb-2\">❌ Error Loading Dashboard</h2>\r\n            <p>{error}</p>\r\n            <button onClick={fetchDashboardData} className=\"btn-primary mt-4\">\r\n              🔄 Try Again\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const getLevelInfo = (level) => {\r\n    const levels = {\r\n      1: { name: 'Novice Journaler', color: '#6b7280', icon: '🌱' },\r\n      2: { name: 'Mindful Writer', color: '#10b981', icon: '📝' },\r\n      3: { name: 'Emotional Explorer', color: '#3b82f6', icon: '🔍' },\r\n      4: { name: 'Wellness Warrior', color: '#8b5cf6', icon: '⚔️' },\r\n      5: { name: 'Sage of Self', color: '#f59e0b', icon: '🧘' },\r\n      6: { name: 'Master of Mindfulness', color: '#ec4899', icon: '🌟' }\r\n    };\r\n    return levels[level] || levels[1];\r\n  };\r\n\r\n  const getMoodEmoji = (mood) => {\r\n    const emojis = {\r\n      happy: '😊',\r\n      sad: '😢',\r\n      excited: '🤩',\r\n      calm: '😌',\r\n      anxious: '😰',\r\n      joyful: '😄',\r\n      tired: '😴',\r\n      neutral: '😐'\r\n    };\r\n    return emojis[mood] || '😐';\r\n  };\r\n\r\n  const levelInfo = getLevelInfo(dashboardData?.level || 1);\r\n\r\n  // Example mood and happiness data (replace with backend data)\r\n  const moodData = dashboardData?.moodTrends || [\r\n    { date: 'Mon', mood: 3 },\r\n    { date: 'Tue', mood: 4 },\r\n    { date: 'Wed', mood: 2 },\r\n    { date: 'Thu', mood: 5 },\r\n    { date: 'Fri', mood: 4 },\r\n    { date: 'Sat', mood: 3 },\r\n    { date: 'Sun', mood: 5 },\r\n  ];\r\n  const happinessData = dashboardData?.happinessTrends || [\r\n    { date: 'Mon', happiness: 60 },\r\n    { date: 'Tue', happiness: 70 },\r\n    { date: 'Wed', happiness: 50 },\r\n    { date: 'Thu', happiness: 80 },\r\n    { date: 'Fri', happiness: 75 },\r\n    { date: 'Sat', happiness: 65 },\r\n    { date: 'Sun', happiness: 90 },\r\n  ];\r\n\r\n  // Filter activityData for selected month/year\r\n  const filteredActivityData = activityData.filter(entry => {\r\n    const date = new Date(entry.createdAt);\r\n    return date.getMonth() === selectedMonth && date.getFullYear() === selectedYear;\r\n  });\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <div className=\"dashboard-title-banner\">Your emotions this week</div>\r\n      <div className=\"dashboard-screenshot-grid\">\r\n        {/* Top row: Bar chart, 7-day mood trend, user info/heatmap/input */}\r\n        <div className=\"card\" style={{ gridColumn: '1/2', gridRow: '1/2' }}>\r\n          {/* Bar chart: Emotions this week */}\r\n          <BarChart width={320} height={220} data={dashboardData?.emotionBarData || []}>\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"emotion\" />\r\n            <YAxis />\r\n            <Tooltip />\r\n            <Legend />\r\n            <Bar dataKey=\"count\" fill=\"#a259c6\" />\r\n          </BarChart>\r\n        </div>\r\n        <div className=\"card\" style={{ gridColumn: '2/3', gridRow: '1/2' }}>\r\n          {/* Line chart: Mood past 7 days */}\r\n          <LineChart width={320} height={220} data={moodTrends7.map(d => ({ date: new Date(d.date).toLocaleDateString(), mood: d.intensity }))}>\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"date\" />\r\n            <YAxis domain={[1, 5]} />\r\n            <Tooltip />\r\n            <Legend />\r\n            <Line type=\"monotone\" dataKey=\"mood\" stroke=\"#ec4899\" strokeWidth={2} dot={{ r: 3 }} />\r\n          </LineChart>\r\n        </div>\r\n        <div className=\"dashboard-userinfo-card\" style={{ gridColumn: '3/4', gridRow: '1/2' }}>\r\n          {/* User info, mini heatmap, input */}\r\n          <div className=\"font-bold mb-1\">User info</div>\r\n          {/* Mini heatmap/treemap placeholder */}\r\n          <div style={{ width: '100%', height: 60, background: '#fbcfe8', borderRadius: 8, margin: '0.5rem 0' }}></div>\r\n          <div className=\"dashboard-input-card\">How are you feeling today?</div>\r\n        </div>\r\n        {/* Second row: 6-month mood trend, stats, links/quotes */}\r\n        <div className=\"card\" style={{ gridColumn: '1/2', gridRow: '2/3' }}>\r\n          {/* 6-month mood trend (multi-line) */}\r\n          <LineChart width={320} height={180} data={moodTrends180.map(d => ({ date: new Date(d.date).toLocaleDateString(), mood: d.intensity, energy: d.energy, productivity: d.productivity }))}>\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"date\" />\r\n            <YAxis />\r\n            <Tooltip />\r\n            <Legend />\r\n            <Line type=\"monotone\" dataKey=\"mood\" stroke=\"#a259c6\" strokeWidth={2} dot={{ r: 2 }} />\r\n            <Line type=\"monotone\" dataKey=\"energy\" stroke=\"#f59e42\" strokeWidth={2} dot={{ r: 2 }} />\r\n            <Line type=\"monotone\" dataKey=\"productivity\" stroke=\"#ec4899\" strokeWidth={2} dot={{ r: 2 }} />\r\n          </LineChart>\r\n        </div>\r\n        <div className=\"dashboard-stats-card\" style={{ gridColumn: '2/3', gridRow: '2/3' }}>\r\n          <div>Total active days: {dashboardData?.activeDays || 0}</div>\r\n          <div>Total happy days: {dashboardData?.happyDays || 0}</div>\r\n          <div>Total sad days: {dashboardData?.sadDays || 0}</div>\r\n          <div>Your most common emotion: {dashboardData?.commonEmotion || '-'}</div>\r\n          <div>Current streak: {dashboardData?.currentStreak || 0}</div>\r\n          <div>Max streak: {dashboardData?.maxStreak || 0}</div>\r\n        </div>\r\n        <div className=\"dashboard-links-card\" style={{ gridColumn: '3/4', gridRow: '2/3' }}>\r\n          <div>Links and quotes</div>\r\n        </div>\r\n        {/* Bottom: Full-width compact activity heatmap with legend */}\r\n        <div className=\"dashboard-heatmap-row\" style={{ gridColumn: '1/4', gridRow: '3/4' }}>\r\n          <div className=\"dashboard-heatmap-month-labels\">\r\n            {['Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec', 'Jan', 'Feb', 'Mar'].map(m => <span key={m}>{m}</span>)}\r\n          </div>\r\n          <ActivityHeatmap data={activityData} small />\r\n          <div className=\"dashboard-heatmap-legend\">\r\n            <span>Less</span>\r\n            <span className=\"dashboard-heatmap-legend-box\" style={{ background: '#ebedf0' }}></span>\r\n            <span className=\"dashboard-heatmap-legend-box\" style={{ background: '#b2f2c9' }}></span>\r\n            <span className=\"dashboard-heatmap-legend-box\" style={{ background: '#51cf66' }}></span>\r\n            <span className=\"dashboard-heatmap-legend-box\" style={{ background: '#2b9348' }}></span>\r\n            <span>More</span>\r\n          </div>\r\n          <div style={{ fontSize: '0.95em', color: '#3b3b3b', marginTop: 4 }}>\r\n            <a href=\"#\" style={{ color: '#a259c6', textDecoration: 'underline' }}>Learn how we count contributions.</a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}