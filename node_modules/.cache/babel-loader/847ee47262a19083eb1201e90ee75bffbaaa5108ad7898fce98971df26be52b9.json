{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ranga\\\\Documents\\\\Journal\\\\jornal\\\\src\\\\Community.js\",\n  _s = $RefreshSig$();\n// src/components/Community.js\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport './Community.css'; // Make sure you have the corresponding CSS file\n\n// Mock user for demonstration - in a real app, this would come from an Auth Context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MOCK_USER = {\n  _id: 'user123',\n  username: 'GratefulSoul',\n  profilePicture: '🙏'\n};\nconst Community = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // State for filtering, sorting, and searching\n  const [sortBy, setSortBy] = useState('latest');\n  const [filter, setFilter] = useState('all'); // 'all' or 'my-posts'\n  const [category, setCategory] = useState('all');\n  const [searchQuery, setSearchQuery] = useState('');\n  const [debouncedSearch, setDebouncedSearch] = useState('');\n  const [newPost, setNewPost] = useState({\n    title: '',\n    content: '',\n    category: 'general'\n  });\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  // Debounce search input to avoid excessive API calls\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedSearch(searchQuery);\n    }, 500); // 500ms delay\n    return () => clearTimeout(handler);\n  }, [searchQuery]);\n\n  // Main data fetching function\n  const fetchPosts = useCallback(async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      let url = `/api/community?sort=${sortBy}&category=${category}`;\n      if (filter === 'my-posts') {\n        url += `&authorId=${MOCK_USER._id}`;\n      }\n      if (debouncedSearch) {\n        url += `&search=${debouncedSearch}`;\n      }\n      const response = await fetch(url);\n      if (!response.ok) throw new Error('Failed to fetch posts.');\n      const result = await response.json();\n      setPosts(result.data);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  }, [sortBy, category, filter, debouncedSearch]);\n  useEffect(() => {\n    fetchPosts();\n  }, [fetchPosts]);\n  const handleLike = async postId => {\n    // Optimistic UI update\n    const originalPosts = [...posts];\n    const updatedPosts = posts.map(p => {\n      if (p._id === postId) {\n        const isLiked = !p.isLiked;\n        return {\n          ...p,\n          isLiked,\n          likeCount: isLiked ? p.likeCount + 1 : p.likeCount - 1\n        };\n      }\n      return p;\n    });\n    setPosts(updatedPosts);\n\n    // API call\n    try {\n      await fetch(`/api/community/${postId}/like`, {\n        method: 'PATCH'\n      });\n      // Optionally refetch or trust the optimistic update\n    } catch (err) {\n      setPosts(originalPosts); // Revert on error\n      alert('Failed to update like.');\n    }\n  };\n  const handleSubmitPost = async e => {\n    e.preventDefault();\n    if (newPost.title.trim() && newPost.content.trim()) {\n      setIsSubmitting(true);\n      try {\n        const response = await fetch('/api/community', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(newPost)\n        });\n        if (!response.ok) throw new Error('Failed to submit post.');\n        const result = await response.json();\n        setPosts([result.data, ...posts]);\n        setNewPost({\n          title: '',\n          content: '',\n          category: 'general'\n        });\n      } catch (err) {\n        alert(err.message);\n      } finally {\n        setIsSubmitting(false);\n      }\n    }\n  };\n  const handleDeletePost = async postId => {\n    if (window.confirm('Are you sure you want to delete this post?')) {\n      try {\n        const response = await fetch(`/api/community/${postId}`, {\n          method: 'DELETE'\n        });\n        if (!response.ok) throw new Error('Failed to delete post.');\n        setPosts(posts.filter(p => p._id !== postId));\n      } catch (err) {\n        alert(err.message);\n      }\n    }\n  };\n  const categories = [{\n    id: 'all',\n    name: 'All Posts',\n    icon: '📰'\n  }, {\n    id: 'mental-health',\n    name: 'Mental Health',\n    icon: '🧠'\n  }, {\n    id: 'gratitude',\n    name: 'Gratitude',\n    icon: '🙏'\n  }, {\n    id: 'writing',\n    name: 'Writing Tips',\n    icon: '✍️'\n  }, {\n    id: 'lifestyle',\n    name: 'Lifestyle',\n    icon: '🌟'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"community-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"community-header\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"community-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"community-sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sidebar-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"section-title\",\n            children: \"Search Posts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"search-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"search-icon\",\n              children: \"\\uD83D\\uDD0D\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Find stories, tips...\",\n              className: \"search-input\",\n              value: searchQuery,\n              onChange: e => setSearchQuery(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sidebar-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"section-title\",\n            children: \"Filter By\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"filter-options\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: `filter-option ${filter === 'all' ? 'active' : ''}`,\n              onClick: () => setFilter('all'),\n              children: \"All Posts\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 16\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `filter-option ${filter === 'my-posts' ? 'active' : ''}`,\n              onClick: () => setFilter('my-posts'),\n              children: \"My Posts\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 16\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 14\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"community-main\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"posts-section\",\n          children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loading-container\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"spinner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 50\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 15\n          }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-state\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 15\n          }, this) : posts.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"posts-list\",\n            children: posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"post-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"post-header\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"post-author\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"author-avatar\",\n                    children: post.author.profilePicture || post.author.username.charAt(0)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 180,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"author-info\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"author-name\",\n                      children: post.author.username\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 182,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"post-timestamp\",\n                      children: new Date(post.createdAt).toLocaleDateString()\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 183,\n                      columnNumber: 33\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 181,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 25\n                }, this), post.author._id === MOCK_USER._id && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"post-card-actions\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"card-action-btn\",\n                    title: \"Edit\",\n                    children: \"\\u270F\\uFE0F\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 189,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"card-action-btn\",\n                    title: \"Delete\",\n                    onClick: () => handleDeletePost(post._id),\n                    children: \"\\uD83D\\uDDD1\\uFE0F\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 190,\n                    columnNumber: 33\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"post-content\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  className: \"post-title\",\n                  children: post.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"post-text\",\n                  children: post.content\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 21\n              }, this)]\n            }, post.id || post._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"empty-state\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"empty-icon\",\n              children: \"\\uD83D\\uDCED\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"empty-title\",\n              children: \"No posts found\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"empty-text\",\n              children: \"Try changing your filters or be the first to share!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n};\n_s(Community, \"wDiWdj0xQCElc6rcviUei9YsxKs=\");\n_c = Community;\nexport default Community;\nvar _c;\n$RefreshReg$(_c, \"Community\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","jsxDEV","_jsxDEV","MOCK_USER","_id","username","profilePicture","Community","_s","posts","setPosts","loading","setLoading","error","setError","sortBy","setSortBy","filter","setFilter","category","setCategory","searchQuery","setSearchQuery","debouncedSearch","setDebouncedSearch","newPost","setNewPost","title","content","isSubmitting","setIsSubmitting","handler","setTimeout","clearTimeout","fetchPosts","url","response","fetch","ok","Error","result","json","data","err","message","handleLike","postId","originalPosts","updatedPosts","map","p","isLiked","likeCount","method","alert","handleSubmitPost","e","preventDefault","trim","headers","body","JSON","stringify","handleDeletePost","window","confirm","categories","id","name","icon","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","onClick","length","post","author","charAt","Date","createdAt","toLocaleDateString","_c","$RefreshReg$"],"sources":["C:/Users/Ranga/Documents/Journal/jornal/src/Community.js"],"sourcesContent":["// src/components/Community.js\r\n\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\nimport './Community.css'; // Make sure you have the corresponding CSS file\r\n\r\n// Mock user for demonstration - in a real app, this would come from an Auth Context\r\nconst MOCK_USER = { _id: 'user123', username: 'GratefulSoul', profilePicture: '🙏' };\r\n\r\nconst Community = () => {\r\n  const [posts, setPosts] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  \r\n  // State for filtering, sorting, and searching\r\n  const [sortBy, setSortBy] = useState('latest');\r\n  const [filter, setFilter] = useState('all'); // 'all' or 'my-posts'\r\n  const [category, setCategory] = useState('all');\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [debouncedSearch, setDebouncedSearch] = useState('');\r\n\r\n  const [newPost, setNewPost] = useState({ title: '', content: '', category: 'general' });\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  // Debounce search input to avoid excessive API calls\r\n  useEffect(() => {\r\n    const handler = setTimeout(() => {\r\n      setDebouncedSearch(searchQuery);\r\n    }, 500); // 500ms delay\r\n    return () => clearTimeout(handler);\r\n  }, [searchQuery]);\r\n\r\n  // Main data fetching function\r\n  const fetchPosts = useCallback(async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      let url = `/api/community?sort=${sortBy}&category=${category}`;\r\n      if (filter === 'my-posts') {\r\n        url += `&authorId=${MOCK_USER._id}`;\r\n      }\r\n      if (debouncedSearch) {\r\n        url += `&search=${debouncedSearch}`;\r\n      }\r\n      \r\n      const response = await fetch(url);\r\n      if (!response.ok) throw new Error('Failed to fetch posts.');\r\n      \r\n      const result = await response.json();\r\n      setPosts(result.data);\r\n    } catch (err) {\r\n      setError(err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [sortBy, category, filter, debouncedSearch]);\r\n\r\n  useEffect(() => {\r\n    fetchPosts();\r\n  }, [fetchPosts]);\r\n\r\n  const handleLike = async (postId) => {\r\n    // Optimistic UI update\r\n    const originalPosts = [...posts];\r\n    const updatedPosts = posts.map(p => {\r\n        if (p._id === postId) {\r\n            const isLiked = !p.isLiked;\r\n            return { ...p, isLiked, likeCount: isLiked ? p.likeCount + 1 : p.likeCount - 1 };\r\n        }\r\n        return p;\r\n    });\r\n    setPosts(updatedPosts);\r\n    \r\n    // API call\r\n    try {\r\n        await fetch(`/api/community/${postId}/like`, { method: 'PATCH' });\r\n        // Optionally refetch or trust the optimistic update\r\n    } catch (err) {\r\n        setPosts(originalPosts); // Revert on error\r\n        alert('Failed to update like.');\r\n    }\r\n  };\r\n\r\n  const handleSubmitPost = async (e) => {\r\n    e.preventDefault();\r\n    if (newPost.title.trim() && newPost.content.trim()) {\r\n      setIsSubmitting(true);\r\n      try {\r\n        const response = await fetch('/api/community', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify(newPost),\r\n        });\r\n        if (!response.ok) throw new Error('Failed to submit post.');\r\n        \r\n        const result = await response.json();\r\n        setPosts([result.data, ...posts]);\r\n        setNewPost({ title: '', content: '', category: 'general' });\r\n      } catch (err) {\r\n        alert(err.message);\r\n      } finally {\r\n        setIsSubmitting(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleDeletePost = async (postId) => {\r\n    if (window.confirm('Are you sure you want to delete this post?')) {\r\n      try {\r\n        const response = await fetch(`/api/community/${postId}`, { method: 'DELETE' });\r\n        if (!response.ok) throw new Error('Failed to delete post.');\r\n        \r\n        setPosts(posts.filter(p => p._id !== postId));\r\n      } catch (err) {\r\n        alert(err.message);\r\n      }\r\n    }\r\n  };\r\n  \r\n  const categories = [\r\n    { id: 'all', name: 'All Posts', icon: '📰' },\r\n    { id: 'mental-health', name: 'Mental Health', icon: '🧠' },\r\n    { id: 'gratitude', name: 'Gratitude', icon: '🙏' },\r\n    { id: 'writing', name: 'Writing Tips', icon: '✍️' },\r\n    { id: 'lifestyle', name: 'Lifestyle', icon: '🌟' }\r\n  ];\r\n\r\n  return (\r\n    <div className=\"community-container\">\r\n      {/* --- Header remains the same --- */}\r\n      <div className=\"community-header\">\r\n         {/* ... existing header JSX ... */}\r\n      </div>\r\n\r\n      <div className=\"community-content\">\r\n        <div className=\"community-sidebar\">\r\n           {/* New Search Bar */}\r\n           <div className=\"sidebar-section\">\r\n              <h3 className=\"section-title\">Search Posts</h3>\r\n              <div className=\"search-container\">\r\n                <span className=\"search-icon\">🔍</span>\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Find stories, tips...\"\r\n                  className=\"search-input\"\r\n                  value={searchQuery}\r\n                  onChange={(e) => setSearchQuery(e.target.value)}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n           {/* Updated Filters */}\r\n           <div className=\"sidebar-section\">\r\n             <h3 className=\"section-title\">Filter By</h3>\r\n             <div className=\"filter-options\">\r\n               <button className={`filter-option ${filter === 'all' ? 'active' : ''}`} onClick={() => setFilter('all')}>All Posts</button>\r\n               <button className={`filter-option ${filter === 'my-posts' ? 'active' : ''}`} onClick={() => setFilter('my-posts')}>My Posts</button>\r\n             </div>\r\n           </div>\r\n           \r\n           {/* Categories and Sort By sections remain similar */}\r\n           {/* ... existing sidebar sections for categories and sort ... */}\r\n        </div>\r\n\r\n        <div className=\"community-main\">\r\n          {/* Create Post Section remains similar */}\r\n          {/* ... existing create post form JSX ... */}\r\n\r\n          <div className=\"posts-section\">\r\n            {/* Posts List */}\r\n            {loading ? (\r\n              <div className=\"loading-container\"><div className=\"spinner\"></div></div>\r\n            ) : error ? (\r\n              <div className=\"error-state\">{error}</div>\r\n            ) : posts.length > 0 ? (\r\n              <div className=\"posts-list\">\r\n                {posts.map(post => (\r\n                  <div key={post.id || post._id} className=\"post-card\">\r\n                    <div className=\"post-header\">\r\n                        <div className=\"post-author\">\r\n                            <div className=\"author-avatar\">{post.author.profilePicture || post.author.username.charAt(0)}</div>\r\n                            <div className=\"author-info\">\r\n                                <span className=\"author-name\">{post.author.username}</span>\r\n                                <span className=\"post-timestamp\">{new Date(post.createdAt).toLocaleDateString()}</span>\r\n                            </div>\r\n                        </div>\r\n                        {/* Edit and Delete Buttons */}\r\n                        {post.author._id === MOCK_USER._id && (\r\n                            <div className=\"post-card-actions\">\r\n                                <button className=\"card-action-btn\" title=\"Edit\">✏️</button>\r\n                                <button className=\"card-action-btn\" title=\"Delete\" onClick={() => handleDeletePost(post._id)}>🗑️</button>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                    {/* ... rest of the post card JSX ... */}\r\n                    <div className=\"post-content\">\r\n                      <h4 className=\"post-title\">{post.title}</h4>\r\n                      <p className=\"post-text\">{post.content}</p>\r\n                    </div>\r\n                    {/* ... actions like like, comment, share ... */}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            ) : (\r\n              <div className=\"empty-state\">\r\n                <div className=\"empty-icon\">📭</div>\r\n                <h3 className=\"empty-title\">No posts found</h3>\r\n                <p className=\"empty-text\">Try changing your filters or be the first to share!</p>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Community;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}