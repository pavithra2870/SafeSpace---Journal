{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ranga\\\\Documents\\\\Journal\\\\jornal\\\\src\\\\ActivityHeatmap.js\",\n  _s = $RefreshSig$();\n// src/components/ActivityHeatmap.js\n\nimport React, { useMemo } from 'react';\nimport './ActivityHeatmap.css'; // We'll create a dedicated CSS file for this component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ActivityHeatmap = ({\n  data,\n  theme = 'green'\n}) => {\n  _s();\n  // Define color themes to keep it flexible\n  const colorThemes = {\n    green: ['#ebedf0', '#c6e48b', '#7bc96f', '#239a3b', '#196127'],\n    pink: ['#fde2f3', '#f9a8d4', '#f472b6', '#ec4899', '#db2777']\n  };\n  const colors = colorThemes[theme] || colorThemes.green;\n  const getColor = count => {\n    if (count <= 0) return colors[0];\n    if (count === 1) return colors[1];\n    if (count < 4) return colors[2];\n    if (count < 7) return colors[3];\n    return colors[4];\n  };\n\n  // Memoize the calculation of heatmap cells for performance.\n  // This expensive calculation only runs when the input 'data' changes.\n  const {\n    cells,\n    monthLabels\n  } = useMemo(() => {\n    const today = new Date();\n    const cells = [];\n    const monthLabels = [];\n    const daysToShow = 371; // Approx 53 weeks\n\n    // Start date is roughly one year ago\n    const startDate = new Date(today);\n    startDate.setDate(today.getDate() - daysToShow);\n\n    // Add padding to the start so the first day aligns correctly in the 7-day week grid\n    const dayOfWeek = startDate.getDay();\n    for (let i = 0; i < dayOfWeek; i++) {\n      cells.push({\n        date: null,\n        count: -1\n      }); // Use -1 to identify placeholders\n    }\n    let lastMonth = -1;\n    for (let i = 0; i < daysToShow; i++) {\n      const currentDate = new Date(startDate);\n      currentDate.setDate(startDate.getDate() + i);\n      const dateStr = currentDate.toISOString().split('T')[0];\n      cells.push({\n        date: dateStr,\n        count: data[dateStr] || 0\n      });\n\n      // Logic to place month labels\n      const currentMonth = currentDate.getMonth();\n      if (currentMonth !== lastMonth) {\n        monthLabels.push({\n          month: currentDate.toLocaleString('default', {\n            month: 'short'\n          }),\n          // Position the label roughly in the middle of the month's column span\n          colStart: Math.floor(cells.length / 7)\n        });\n        lastMonth = currentMonth;\n      }\n    }\n    return {\n      cells,\n      monthLabels\n    };\n  }, [data]); // Dependency array\n\n  const weekdays = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `heatmap-container theme-${theme}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"heatmap-header\",\n      children: monthLabels.map(({\n        month,\n        colStart\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"heatmap-month\",\n        style: {\n          gridColumnStart: colStart\n        },\n        children: month\n      }, month, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"heatmap-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"heatmap-weekdays\",\n        children: weekdays.map(day => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"heatmap-weekday\",\n          children: day\n        }, day, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"heatmap-grid\",\n        children: cells.map((cell, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"heatmap-cell\",\n          style: {\n            backgroundColor: getColor(cell.count)\n          },\n          children: cell.date && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"heatmap-tooltip\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [cell.count, \" entries\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 19\n            }, this), \" on \", cell.date]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(ActivityHeatmap, \"dKAlQizg31X/KBnWhs6D25xyfEM=\");\n_c = ActivityHeatmap;\nexport default ActivityHeatmap;\nvar _c;\n$RefreshReg$(_c, \"ActivityHeatmap\");","map":{"version":3,"names":["React","useMemo","jsxDEV","_jsxDEV","ActivityHeatmap","data","theme","_s","colorThemes","green","pink","colors","getColor","count","cells","monthLabels","today","Date","daysToShow","startDate","setDate","getDate","dayOfWeek","getDay","i","push","date","lastMonth","currentDate","dateStr","toISOString","split","currentMonth","getMonth","month","toLocaleString","colStart","Math","floor","length","weekdays","className","children","map","style","gridColumnStart","fileName","_jsxFileName","lineNumber","columnNumber","day","cell","index","backgroundColor","_c","$RefreshReg$"],"sources":["C:/Users/Ranga/Documents/Journal/jornal/src/ActivityHeatmap.js"],"sourcesContent":["// src/components/ActivityHeatmap.js\r\n\r\nimport React, { useMemo } from 'react';\r\nimport './ActivityHeatmap.css'; // We'll create a dedicated CSS file for this component\r\n\r\nconst ActivityHeatmap = ({ data, theme = 'green' }) => {\r\n  // Define color themes to keep it flexible\r\n  const colorThemes = {\r\n    green: ['#ebedf0', '#c6e48b', '#7bc96f', '#239a3b', '#196127'],\r\n    pink: ['#fde2f3', '#f9a8d4', '#f472b6', '#ec4899', '#db2777'],\r\n  };\r\n\r\n  const colors = colorThemes[theme] || colorThemes.green;\r\n\r\n  const getColor = (count) => {\r\n    if (count <= 0) return colors[0];\r\n    if (count === 1) return colors[1];\r\n    if (count < 4) return colors[2];\r\n    if (count < 7) return colors[3];\r\n    return colors[4];\r\n  };\r\n\r\n  // Memoize the calculation of heatmap cells for performance.\r\n  // This expensive calculation only runs when the input 'data' changes.\r\n  const { cells, monthLabels } = useMemo(() => {\r\n    const today = new Date();\r\n    const cells = [];\r\n    const monthLabels = [];\r\n    const daysToShow = 371; // Approx 53 weeks\r\n\r\n    // Start date is roughly one year ago\r\n    const startDate = new Date(today);\r\n    startDate.setDate(today.getDate() - daysToShow);\r\n    \r\n    // Add padding to the start so the first day aligns correctly in the 7-day week grid\r\n    const dayOfWeek = startDate.getDay();\r\n    for (let i = 0; i < dayOfWeek; i++) {\r\n      cells.push({ date: null, count: -1 }); // Use -1 to identify placeholders\r\n    }\r\n\r\n    let lastMonth = -1;\r\n\r\n    for (let i = 0; i < daysToShow; i++) {\r\n      const currentDate = new Date(startDate);\r\n      currentDate.setDate(startDate.getDate() + i);\r\n      const dateStr = currentDate.toISOString().split('T')[0];\r\n      \r\n      cells.push({\r\n        date: dateStr,\r\n        count: data[dateStr] || 0,\r\n      });\r\n\r\n      // Logic to place month labels\r\n      const currentMonth = currentDate.getMonth();\r\n      if (currentMonth !== lastMonth) {\r\n        monthLabels.push({\r\n          month: currentDate.toLocaleString('default', { month: 'short' }),\r\n          // Position the label roughly in the middle of the month's column span\r\n          colStart: Math.floor(cells.length / 7),\r\n        });\r\n        lastMonth = currentMonth;\r\n      }\r\n    }\r\n\r\n    return { cells, monthLabels };\r\n  }, [data]); // Dependency array\r\n\r\n  const weekdays = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\r\n\r\n  return (\r\n    <div className={`heatmap-container theme-${theme}`}>\r\n      <div className=\"heatmap-header\">\r\n        {monthLabels.map(({ month, colStart }) => (\r\n          <div key={month} className=\"heatmap-month\" style={{ gridColumnStart: colStart }}>\r\n            {month}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"heatmap-body\">\r\n        <div className=\"heatmap-weekdays\">\r\n          {weekdays.map(day => (\r\n            <div key={day} className=\"heatmap-weekday\">{day}</div>\r\n          ))}\r\n        </div>\r\n        <div className=\"heatmap-grid\">\r\n          {cells.map((cell, index) => (\r\n            <div\r\n              key={index}\r\n              className=\"heatmap-cell\"\r\n              style={{ backgroundColor: getColor(cell.count) }}\r\n            >\r\n              {cell.date && (\r\n                <div className=\"heatmap-tooltip\">\r\n                  <strong>{cell.count} entries</strong> on {cell.date}\r\n                </div>\r\n              )}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ActivityHeatmap;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}