{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ranga\\\\Documents\\\\Journal\\\\jornal\\\\src\\\\Manifestations.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo } from 'react';\nimport './Manifestations.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = 'http://localhost:5001/api/manifestation';\nconst Manifestations = () => {\n  _s();\n  const [manifestations, setManifestations] = useState([]);\n  const [newManifestation, setNewManifestation] = useState({\n    text: '',\n    category: 'personal',\n    priority: 'medium'\n  });\n  const [filter, setFilter] = useState('all');\n  const [sortBy, setSortBy] = useState('date');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const categories = [/* ... (your categories array is fine) ... */];\n  const priorities = [/* ... (your priorities array is fine) ... */];\n\n  // Fetch manifestations\n  useEffect(() => {\n    const fetchManifestations = async () => {\n      setLoading(true);\n      setError(null);\n      try {\n        const token = localStorage.getItem('token');\n        const res = await fetch(API_BASE_URL, {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        if (!res.ok) throw new Error('Failed to fetch data.');\n        const data = await res.json();\n        setManifestations(data.success ? data.data : []);\n      } catch (err) {\n        setError(err.message);\n        setManifestations([]);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchManifestations();\n  }, []);\n\n  // Add a manifestation\n  const addManifestation = async e => {\n    e.preventDefault();\n    if (!newManifestation.text.trim()) return;\n    try {\n      const token = localStorage.getItem('token');\n      const res = await fetch(API_BASE_URL, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        // FIX: Sending all the correct fields from the form\n        body: JSON.stringify({\n          title: newManifestation.text.trim(),\n          category: newManifestation.category,\n          priority: newManifestation.priority\n        })\n      });\n      const data = await res.json();\n      if (data.success) {\n        setManifestations([data.data, ...manifestations]);\n        setNewManifestation({\n          text: '',\n          category: 'personal',\n          priority: 'medium'\n        });\n      }\n    } catch (err) {\n      console.error(\"Failed to add manifestation:\", err);\n    }\n  };\n\n  // Toggle fulfilled status\n  const toggleFulfilled = async manifestationId => {\n    const manifestation = manifestations.find(m => m._id === manifestationId);\n    if (!manifestation) return;\n    try {\n      const token = localStorage.getItem('token');\n      const res = await fetch(`${API_BASE_URL}/${manifestationId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        // FIX: Only sending the property that needs to be changed\n        body: JSON.stringify({\n          fulfilled: !manifestation.fulfilled\n        })\n      });\n      const data = await res.json();\n      if (data.success) {\n        setManifestations(manifestations.map(m => m._id === manifestationId ? data.data : m));\n      }\n    } catch (err) {\n      console.error(\"Failed to toggle fulfillment:\", err);\n    }\n  };\n\n  // Delete a manifestation\n  const deleteManifestation = async manifestationId => {\n    try {\n      const token = localStorage.getItem('token');\n      const res = await fetch(`${API_BASE_URL}/${manifestationId}`, {\n        method: 'DELETE',\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      const data = await res.json();\n      if (data.success) {\n        setManifestations(manifestations.filter(m => m._id !== manifestationId));\n      }\n    } catch (err) {\n      console.error(\"Failed to delete manifestation:\", err);\n    }\n  };\n\n  // Memoized sorting and filtering for better performance\n  const sortedManifestations = useMemo(() => {\n    const filtered = filter === 'all' ? manifestations : manifestations.filter(m => m.category === filter);\n    return [...filtered].sort((a, b) => {\n      switch (sortBy) {\n        case 'date':\n          // FIX: Sorting by createdAt for reliability\n          return new Date(b.createdAt) - new Date(a.createdAt);\n        case 'priority':\n          const priorityOrder = {\n            high: 3,\n            medium: 2,\n            low: 1\n          };\n          return (priorityOrder[b.priority] || 0) - (priorityOrder[a.priority] || 0);\n        case 'fulfilled':\n          return a.fulfilled - b.fulfilled;\n        default:\n          return 0;\n      }\n    });\n  }, [manifestations, filter, sortBy]);\n  const fulfilledCount = manifestations.filter(m => m.fulfilled).length;\n  const totalCount = manifestations.length;\n  const fulfillmentRate = totalCount > 0 ? Math.round(fulfilledCount / totalCount * 100) : 0;\n  if (loading) {/* ... (loading JSX is fine) ... */}\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 23\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"manifestations-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"manifestations-list\",\n      children: sortedManifestations.map(manifestation =>\n      /*#__PURE__*/\n      // FIX: Use manifestation._id for the key\n      _jsxDEV(\"div\", {\n        className: `manifestation-card ${manifestation.fulfilled ? 'fulfilled' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"manifestation-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: `manifestation-text ${manifestation.fulfilled ? 'strikethrough' : ''}`,\n            children: manifestation.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 15\n          }, this), manifestation.fulfilled && manifestation.fulfilledDate && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"fulfillment-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"fulfillment-icon\",\n              children: \"\\uD83C\\uDF89\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"fulfillment-text\",\n              children: [\"Fulfilled on \", new Date(manifestation.fulfilledDate).toLocaleDateString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"manifestation-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: `action-btn fulfill-btn ${manifestation.fulfilled ? 'fulfilled' : ''}`,\n            onClick: () => toggleFulfilled(manifestation._id),\n            title: manifestation.fulfilled ? 'Mark as unfulfilled' : 'Mark as fulfilled',\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"action-icon\",\n              children: manifestation.fulfilled ? '✅' : '⭕'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"action-btn delete-btn\",\n            onClick: () => deleteManifestation(manifestation._id),\n            title: \"Delete manifestation\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"action-icon\",\n              children: \"\\uD83D\\uDDD1\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this)]\n      }, manifestation._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 5\n  }, this);\n};\n_s(Manifestations, \"elTua7JbN7ogt+/wvS7oYhb+Hrs=\");\n_c = Manifestations;\nexport default Manifestations;\nvar _c;\n$RefreshReg$(_c, \"Manifestations\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","jsxDEV","_jsxDEV","API_BASE_URL","Manifestations","_s","manifestations","setManifestations","newManifestation","setNewManifestation","text","category","priority","filter","setFilter","sortBy","setSortBy","loading","setLoading","error","setError","categories","priorities","fetchManifestations","token","localStorage","getItem","res","fetch","headers","ok","Error","data","json","success","err","message","addManifestation","e","preventDefault","trim","method","body","JSON","stringify","title","console","toggleFulfilled","manifestationId","manifestation","find","m","_id","fulfilled","map","deleteManifestation","sortedManifestations","filtered","sort","a","b","Date","createdAt","priorityOrder","high","medium","low","fulfilledCount","length","totalCount","fulfillmentRate","Math","round","className","children","fileName","_jsxFileName","lineNumber","columnNumber","fulfilledDate","toLocaleDateString","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Ranga/Documents/Journal/jornal/src/Manifestations.js"],"sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\r\nimport './Manifestations.css';\r\n\r\nconst API_BASE_URL = 'http://localhost:5001/api/manifestation';\r\n\r\nconst Manifestations = () => {\r\n  const [manifestations, setManifestations] = useState([]);\r\n  const [newManifestation, setNewManifestation] = useState({ text: '', category: 'personal', priority: 'medium' });\r\n  const [filter, setFilter] = useState('all');\r\n  const [sortBy, setSortBy] = useState('date');\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  const categories = [ /* ... (your categories array is fine) ... */ ];\r\n  const priorities = [ /* ... (your priorities array is fine) ... */ ];\r\n\r\n  // Fetch manifestations\r\n  useEffect(() => {\r\n    const fetchManifestations = async () => {\r\n      setLoading(true);\r\n      setError(null);\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        const res = await fetch(API_BASE_URL, {\r\n          headers: { 'Authorization': `Bearer ${token}` }\r\n        });\r\n        if (!res.ok) throw new Error('Failed to fetch data.');\r\n        const data = await res.json();\r\n        setManifestations(data.success ? data.data : []);\r\n      } catch (err) {\r\n        setError(err.message);\r\n        setManifestations([]);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchManifestations();\r\n  }, []);\r\n\r\n  // Add a manifestation\r\n  const addManifestation = async (e) => {\r\n    e.preventDefault();\r\n    if (!newManifestation.text.trim()) return;\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const res = await fetch(API_BASE_URL, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${token}`\r\n        },\r\n        // FIX: Sending all the correct fields from the form\r\n        body: JSON.stringify({\r\n          title: newManifestation.text.trim(),\r\n          category: newManifestation.category,\r\n          priority: newManifestation.priority\r\n        })\r\n      });\r\n      const data = await res.json();\r\n      if (data.success) {\r\n        setManifestations([data.data, ...manifestations]);\r\n        setNewManifestation({ text: '', category: 'personal', priority: 'medium' });\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Failed to add manifestation:\", err);\r\n    }\r\n  };\r\n\r\n  // Toggle fulfilled status\r\n  const toggleFulfilled = async (manifestationId) => {\r\n    const manifestation = manifestations.find(m => m._id === manifestationId);\r\n    if (!manifestation) return;\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const res = await fetch(`${API_BASE_URL}/${manifestationId}`, {\r\n        method: 'PUT',\r\n        headers: { 'Content-Type': 'application/json', 'Authorization': `Bearer ${token}` },\r\n        // FIX: Only sending the property that needs to be changed\r\n        body: JSON.stringify({ fulfilled: !manifestation.fulfilled })\r\n      });\r\n      const data = await res.json();\r\n      if (data.success) {\r\n        setManifestations(manifestations.map(m => m._id === manifestationId ? data.data : m));\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Failed to toggle fulfillment:\", err);\r\n    }\r\n  };\r\n\r\n  // Delete a manifestation\r\n  const deleteManifestation = async (manifestationId) => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const res = await fetch(`${API_BASE_URL}/${manifestationId}`, {\r\n        method: 'DELETE',\r\n        headers: { 'Authorization': `Bearer ${token}` }\r\n      });\r\n      const data = await res.json();\r\n      if (data.success) {\r\n        setManifestations(manifestations.filter(m => m._id !== manifestationId));\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Failed to delete manifestation:\", err);\r\n    }\r\n  };\r\n\r\n  // Memoized sorting and filtering for better performance\r\n  const sortedManifestations = useMemo(() => {\r\n    const filtered = filter === 'all' \r\n      ? manifestations \r\n      : manifestations.filter(m => m.category === filter);\r\n    \r\n    return [...filtered].sort((a, b) => {\r\n      switch (sortBy) {\r\n        case 'date':\r\n          // FIX: Sorting by createdAt for reliability\r\n          return new Date(b.createdAt) - new Date(a.createdAt);\r\n        case 'priority':\r\n          const priorityOrder = { high: 3, medium: 2, low: 1 };\r\n          return (priorityOrder[b.priority] || 0) - (priorityOrder[a.priority] || 0);\r\n        case 'fulfilled':\r\n          return a.fulfilled - b.fulfilled;\r\n        default:\r\n          return 0;\r\n      }\r\n    });\r\n  }, [manifestations, filter, sortBy]);\r\n\r\n  const fulfilledCount = manifestations.filter(m => m.fulfilled).length;\r\n  const totalCount = manifestations.length;\r\n  const fulfillmentRate = totalCount > 0 ? Math.round((fulfilledCount / totalCount) * 100) : 0;\r\n\r\n  if (loading) { /* ... (loading JSX is fine) ... */ }\r\n  if (error) { return <div className=\"error-message\">{error}</div>; }\r\n\r\n  return (\r\n    <div className=\"manifestations-container\">\r\n      {/* ... (Header, Sidebar, and Form sections are mostly fine) ... */}\r\n\r\n      {/* --- RENDER THE LIST --- */}\r\n      <div className=\"manifestations-list\">\r\n        {sortedManifestations.map(manifestation => (\r\n          // FIX: Use manifestation._id for the key\r\n          <div key={manifestation._id} className={`manifestation-card ${manifestation.fulfilled ? 'fulfilled' : ''}`}>\r\n            <div className=\"manifestation-content\">\r\n              {/* ... (card content rendering is fine) ... */}\r\n              <p className={`manifestation-text ${manifestation.fulfilled ? 'strikethrough' : ''}`}>\r\n                {manifestation.title}\r\n              </p>\r\n              {manifestation.fulfilled && manifestation.fulfilledDate && (\r\n                <div className=\"fulfillment-info\">\r\n                  <span className=\"fulfillment-icon\">🎉</span>\r\n                  <span className=\"fulfillment-text\">\r\n                    Fulfilled on {new Date(manifestation.fulfilledDate).toLocaleDateString()}\r\n                  </span>\r\n                </div>\r\n              )}\r\n            </div>\r\n            \r\n            <div className=\"manifestation-actions\">\r\n              {/* FIX: Use manifestation._id in the onClick handlers */}\r\n              <button\r\n                className={`action-btn fulfill-btn ${manifestation.fulfilled ? 'fulfilled' : ''}`}\r\n                onClick={() => toggleFulfilled(manifestation._id)}\r\n                title={manifestation.fulfilled ? 'Mark as unfulfilled' : 'Mark as fulfilled'}\r\n              >\r\n                <span className=\"action-icon\">\r\n                  {manifestation.fulfilled ? '✅' : '⭕'}\r\n                </span>\r\n              </button>\r\n              <button\r\n                className=\"action-btn delete-btn\"\r\n                onClick={() => deleteManifestation(manifestation._id)}\r\n                title=\"Delete manifestation\"\r\n              >\r\n                <span className=\"action-icon\">🗑️</span>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Manifestations;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}